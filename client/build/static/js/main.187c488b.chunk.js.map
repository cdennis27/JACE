{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/MenuItems/index.js","utils/queries.js","assets/spinner.gif","components/Menu/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","components/Footer/index.js","pages/Contact.js","pages/Success.js","pages/OrderHistory.js","components/ProductItem/index.js","components/ProductList/index.js","pages/Tables.js","pages/MenuDetail.js","pages/Admin.js","pages/PendingOrders.js","App.js","serviceWorker.js","index.js"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","MenuItems","item","_useStoreContext","_useStoreContext2","image","name","price","quantity","className","children","_jsxs","Link","to","alt","src","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","QUERY_ALL_USERS","_templateObject6","ProductList","_useState","useState","_useState2","visibleCategories","setVisibleCategories","_useQuery","useQuery","loadingProducts","loading","productData","data","_useQuery2","loadingCategories","categoryData","useEffect","forEach","then","newVisibleCategories","category","onClick","categoryId","prevVisibleCategories","_defineProperty","spinner","CategoryMenu","CartItem","onChange","target","parseInt","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","tableId","employee","location","assign","undefined","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","setIsEmailSent","toggleCart","calculateTotal","sum","toFixed","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","Auth","loggedIn","userEmail","getProfile","email","cartItemsString","title","templateParams","to_email","cartItems","total","emailjs","send","response","status","text","error","sendReceiptEmail","productIds","i","push","variables","role","Home","Menu","Detail","id","useParams","currentProduct","setCurrentProduct","find","indexedProducts","_Fragment","description","itemInCart","cartItem","disabled","p","Jumbotron","style","height","clear","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","tempTableId","tablesId","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleFormSubmit","event","mutationResponse","preventDefault","user","t0","_x","handleChange","_event$target","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Footer","tableNumber","Contact","newName","newEmail","newMessage","delay","ms","setTimeout","errorMessage","setErrorMessage","form","useRef","handleFocus","handleBlur","input","clearForm","current","reset","ref","test","String","toLowerCase","sendForm","abrupt","onFocus","onBlur","placeholder","Success","addOrder","_saveOrder","_yield$addOrder","saveOrder","OrderHistory","orders","order","purchaseDate","toLocaleDateString","index","ProductItem","Tables","Admin","employees","worker","profiles","users","profile","PendingOrders","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","MenuDetail","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.187c488b.chunk.js","sourcesContent":["\n\nexport function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n\nexport function validateInput(input) {\n    \n  const none = undefined;\n  console.log(input);\n  \n  if (input === undefined || input === null || input === none || input === \"\") {\n    return false;\n  }\n  \n  return true;\n}\n\nexport function validateEmail(email) {\n  const reply = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return reply.test(String(email).toLowerCase());\n}\n\n\n\n\n\n\n\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","// TODO: Add a comment briefly describing the functionality of `useContext`\n// Your comment here\n\nimport React, { createContext, useContext } from 'react';\n\n// TODO: Add a comment describing the React hook that `useProductReducer` makes use of\n// Your comment here\n\nimport { useProductReducer } from './reducers';\n\n// TODO: Add a comment briefly describing what `createContext` does and what it returns\n// Your comment here\n\nconst StoreContext = createContext();\n\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  // TODO: Add a comment explaining why we passed a `value` attribute to the `Provider`\n  // Your comment here\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// TODO: Add a comment describing the purpose of our custom `useStoreContext` hook\n// Your comment here\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./MenuItems.css\";\n\nfunction MenuItems(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/menuDetail/${_id}`}>\n        <div className=\"img-container\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"product-info\">\n          <p className=\"product-name\">{name}</p>\n          <p className=\"product-price\">${price}</p>\n        </div>\n      </Link>\n      \n    </div>\n  );  \n}\n\nexport default MenuItems;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      employee\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_USERS = gql`\nquery {\n  users {\n    email\n    firstName\n    lastName\n    employee\n  }\n}\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect, useState } from 'react';\nimport MenuItems from '../MenuItems';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS, QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const [visibleCategories, setVisibleCategories] = useState({});\n\n  const { loading: loadingProducts, data: productData } = useQuery(QUERY_PRODUCTS);\n  const { loading: loadingCategories, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (productData) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: productData.products,\n      });\n      productData.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loadingProducts) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n\n      const newVisibleCategories = {};\n      categoryData.categories.forEach((category) => {\n        newVisibleCategories[category._id] = true;\n      });\n      setVisibleCategories(newVisibleCategories);\n    }\n  }, [productData, loadingProducts, categoryData, dispatch]);\n\n  function renderProductsByCategory(categoryId) {\n    if (!visibleCategories[categoryId]) {\n      return null;\n    }\n\n    return state.products\n      .filter((product) => product.category._id === categoryId)\n      .map((product) => (\n        <MenuItems\n          key={product._id}\n          _id={product._id}\n          image={product.image}\n          name={product.name}\n          price={product.price}\n          quantity={product.quantity}\n        />\n      ));\n  }\n\n  function toggleCategoryVisibility(categoryId) {\n    setVisibleCategories((prevVisibleCategories) => ({\n      ...prevVisibleCategories,\n      [categoryId]: !prevVisibleCategories[categoryId],\n    }));\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.categories.map((category) => (\n        <div key={category._id}>\n          <h2 className=\"category-menu\" onClick={() => toggleCategoryVisibility(category._id)}>{category.name}</h2>\n          <div className=\"flex-row\">{renderProductsByCategory(category._id)}</div>\n        </div>\n      ))}\n      {(loadingProducts || loadingCategories) ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport \"./CategoryMenu.css\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2 className=\"category-menu\">Our Menu</h2>\n      <div className=\"whole-category\">\n        {categories.map((item) => (\n          <button\n            key={item._id}\n            onClick={() => {\n              handleClick(item._id);\n            }}\n            className=\"category-btn\"\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row cart-overall\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"cart-item\">\n        <div>{item.name} ${item.price}</div>\n        <div className=\"quantity-remove\">\n          <div className=\"quantity\">\n            <span>Qty:</span>\n            <input\n              type=\"number\"\n              value={item.purchaseQuantity}\n              onChange={onChange}\n            />\n          </div>\n          <span\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n            className=\"remove\"\n          >\n            Remove\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    var tableId = localStorage.getItem(\"tableId\");\n    var employee = localStorage.getItem(\"employee\");\n    console.log(employee);\n    \n\n    if (employee == \"true\") {\n      console.log(\"Employee!!\");\n      window.location.assign('/admin');\n    } else if (tableId === null || tableId === undefined || tableId === \"\") {\n      console.log(\"No TABLE!!\");\n      window.location.assign('/');\n    } else {\n      window.location.assign('/tableOrder');\n    }\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('tableId');\n    localStorage.removeItem('employee');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n// require('dotenv').config();\nimport emailjs from '@emailjs/browser';\n\n\nconst stripePromise = loadStripe('pk_test_51MWsBqFedoDMRamPBsp4YRZEOTRVhMECzdszYpVVduHdCkuoBnZSyk6G7UpjWFIk0VVfIcVUwPhX2SbGhtWpQjSE00UplXsjGu');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function sendReceiptEmail() {\n    const userEmail = Auth.getProfile().data.email;\n    let cartItemsString = '';\n    state.cart.forEach((item) => {\n      cartItemsString += `${item.title} x ${item.purchaseQuantity} - $${(item.price * item.purchaseQuantity).toFixed(2)}\\n`;\n    });\n\n    const templateParams = {\n      to_email: userEmail,\n      cartItems: cartItemsString,\n      total: calculateTotal(),\n    };\n\n    emailjs\n      .send(\n        'service_65z17x41', // change to emailjs service id\n        'template_9d825df', // change to emailjs template id\n        templateParams,\n        'Sj7tZLR-yvIAnWwpp' // change to emailjs public key \n      )\n      .then(\n        (response) => {\n          console.log('Email successfully sent!', response.status, response.text);\n          setIsEmailSent(true);\n        },\n        (error) => {\n          console.log('Email failed to send...', error);\n        }\n      );\n  }\n\n  function submitCheckout() {\n    sendReceiptEmail();\n\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🍽️\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        x\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"total\">\n            <strong>Total: ${calculateTotal()}</strong>\n          </div>\n          {Auth.loggedIn() ? (\n            <button onClick={submitCheckout} className=\"checkout-btn\">Checkout</button>\n          ) : (\n            <span>(log in to check out)</span>\n          )}\n        </div>\n      ) : (\n        <h7>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your plate yet!\n        </h7>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport Menu from \"../components/Menu\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      {/* <CategoryMenu /> */}\n      <Menu />\n      \n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport './Detail.css';\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/tableOrder\" className=\"links-to-go\">← Back to Products</Link>\n          <div className=\"detail-container\">\n            <div className=\"image-container\">\n              <img\n                className=\"product-image\"\n                src={`/images/${currentProduct.image}`}\n                alt={currentProduct.name}\n              />\n            </div>\n\n            <div className=\"actions\">\n              <h2 className=\"product-name\">{currentProduct.name}</h2>\n              <p className=\"product-price\">\n                <strong>Price:</strong>${currentProduct.price}\n              </p>\n              <p className=\"product-description\">{currentProduct.description}</p>\n              <button className=\"add-to-cart-btn\" onClick={addToCart}>\n                Add to Cart\n              </button>\n              <button\n                className=\"remove-from-cart-btn\"\n                disabled={!cart.find((p) => p._id === currentProduct._id)}\n                onClick={removeFromCart}\n              >\n                Remove from Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n\n}\n\nexport default Detail;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 260, clear: \"both\", textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        employee\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link, useParams } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport './Signup.css';\nvar tableId = localStorage.getItem(\"tableId\");\n\nfunction Login(props) {\nconsole.log(\"tableId is already set = \" + tableId);\n\n  var tempTableId = useParams().tablesId;\n  if (tempTableId > 0) {\n    tableId = tempTableId;\n    localStorage.setItem(\"tableId\", tableId);\n  }\n\n  if (tableId === null || tableId === undefined || tableId === \"\") {\n    tableId = \"\";\n  }\n  \n  console.log(\"tempTableId=\" + tempTableId);\n  console.log(tableId);\n\n\n\n\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n  \n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      \n      const token = mutationResponse.data.login.token;\n      console.log(mutationResponse.data.login.user.employee);\n      localStorage.setItem(\"employee\", mutationResponse.data.login.user.employee);\n      //debugger;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\" className=\"links-to-go\">← Go to Signup</Link>\n      <div>\n        <h2 className=\"signup\">Welcome Back!</h2>\n\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n      </div>\n\n      <form onSubmit={handleFormSubmit} className=\"login-padding\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\" className=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport './Signup.css';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\" className=\"links-to-go\">← Go to Login</Link>\n      <div>\n        <h2 className=\"signup\">Hello, Friend!</h2>\n      </div>\n\n      <form onSubmit={handleFormSubmit} className=\"signup-padding\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\" className=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\"; \nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"nav-links flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contact\">\n              Contact\n            </Link>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"nav-links flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contact\">\n              Contact\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"nav-header flex-row\">\n      <div className=\"logo-container\">\n        <div className=\"logo-circle\"></div>\n        <h1>\n          <Link to=\"/tableOrder\">\n            JACE\n          </Link>\n        </h1>\n      </div>\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\nimport './Footer.css';\n\nfunction Footer() {\n\n  var tableNumber = localStorage.getItem(\"tableId\");\n  if (tableNumber === null || tableNumber === undefined || tableNumber === \"\") {\n    tableNumber = \"\";\n  } else {\n    tableNumber = \"Table \" + tableNumber;\n  }\n\n  if (!Auth.loggedIn()) {\n    tableNumber = \"\";\n  }\n\n\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-content\">\n        <h2 className=\"table-number\">{tableNumber}</h2>\n        <p>\n          Want to learn more? <Link to=\"/contact\">Contact Us Here!</Link>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { validateEmail, validateInput } from '../utils/helpers';\nimport './Contact.css';\n\nfunction Contact() {\n  var newName = newName;\n  var newEmail = newEmail;\n  var newMessage = newMessage;\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n\n    if (!newName) {\n      setErrorMessage('Name is missing, please provide your name!');\n\n      return e.target.reset();\n\n    }\n    if (!validateEmail(newEmail)) {\n      setErrorMessage('Email is invalid');\n\n      return e.target.reset();\n\n    }\n    if (!newMessage) {\n      setErrorMessage('Message is missing, please provide a message!');\n\n      return e.target.reset();\n\n    }\n\n    emailjs.sendForm(\n      'service_93p5os3',\n      'template_x3tk4je',\n      form.current,\n      '5vCxrVoi6nK138Vam'\n    )\n      .then(async (result) => {\n        console.log(result.text);\n        console.log(form);         // <form ref={form} onSubmit={sendEmail}>\n        setErrorMessage(\"Message sent, We will get back to you shortly!\");\n        await delay(2000);\n        clearForm();\n        return setErrorMessage('');\n\n\n      }, (error) => {\n        console.log(error.text);\n      });\n  };\n\n  const handleFocus = (e) => {\n    e.preventDefault();\n    setErrorMessage('')\n    console.log(e.target.value);\n\n  };\n\n  const handleBlur = (e) => {\n    e.preventDefault();\n\n    console.log(newName);\n    if (!validateInput(e.target.value)) {\n      setErrorMessage('Please enter a valid input!')\n\n      return;\n    };\n\n    console.log(e.target.value);\n  };\n\n  const handleName = (e) => {\n    e.preventDefault();\n\n    return newName = e.target.value;\n\n  };\n\n  const handleEmail = (e) => {\n    e.preventDefault();\n\n    return newEmail = e.target.value;\n\n  };\n\n  const handleMessage = (e) => {\n    e.preventDefault();\n\n    return newMessage = e.target.value;\n\n  };\n\n  const clearForm = () => {\n    form.current.reset();\n  };\n\n  return (\n    <section>\n      <h2 className=\"contact-us\">Contact Us</h2>\n\n      <div className=\"contact\">\n        <div className=\"contact-left-container\">\n          <img className=\"map\" src='/images/map.png' alt=\"map\" />\n        </div>\n\n        <div className=\"contact-right-container\">\n          <h1>JACE</h1>\n          <p>Phone: 123-456-7890</p>\n          <p>Email: <a href=\"mailto:jace1971@yahoo.com\">jace1971@yahoo.com</a></p>\n          <p>Address: 130 St George St, Toronto</p>\n\n          <form className=\"contact-form\" ref={form} onSubmit={sendEmail}>\n            <label className=\"label\">Name</label>\n            <input type=\"text\" name=\"user_name\" className=\"input\" onChange={handleName} onFocus={handleFocus} onBlur={handleBlur} />\n            <label>Email</label>\n            <input type=\"email\" name=\"user_email\" className=\"input\" onChange={handleEmail} onFocus={handleFocus} onBlur={handleBlur} />\n            <label>Message</label>\n            <textarea placeholder=\"Enter message\" name=\"message\" className=\"input message-box\" onChange={handleMessage} onFocus={handleFocus} onBlur={handleBlur} />\n            <input className=\"contact-submit\" type=\"submit\" value=\"Send\"/>\n          </form>\n          {errorMessage && (\n            <div>\n              <p className=\"error-message\">{errorMessage}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n    </section>\n  );\n}\n\nexport default Contact;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        console.log('Order placed! You will now be redirected to the home page.');\n        localStorage.setItem(\"tableId\", \"\");\n        console.log(localStorage.getItem(\"tableId\"));\n        window.location.assign('/');\n      }, 4000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div className=\"success-children\">\n      <Jumbotron>\n        <h2>💸👍</h2>\n        <h2>Your server will bring your order when ready!</h2>\n        <h4>You will now be redirected to the home page</h4>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './OrderHistory.css';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\" className=\"links-to-go\">← Back to Products</Link>\n\n        {user ? (\n          <div className=\"space-between my-2 order-history\">\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h5>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h5>\n                <div className=\"history\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { \n  ADD_TO_CART, \n  UPDATE_CART_QUANTITY \n} from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./ProductItem.css\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/products/${_id}`}>\n        <div className=\"img-container\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"product-info\">\n          <p className=\"product-name\">{name}</p>\n          <p className=\"product-price\">${price}</p>\n        </div>\n      </Link>\n      <button onClick={addToCart} className=\"add-to-cart-btn\">\n        Add to cart\n      </button>\n    </div>\n  );  \n}\n\nexport default ProductItem;\n","import React, { useEffect, useState } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS, QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const [visibleCategories, setVisibleCategories] = useState({});\n\n  const { loading: loadingProducts, data: productData } = useQuery(QUERY_PRODUCTS);\n  const { loading: loadingCategories, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (productData) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: productData.products,\n      });\n      productData.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loadingProducts) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n\n      const newVisibleCategories = {};\n      categoryData.categories.forEach((category) => {\n        newVisibleCategories[category._id] = true;\n      });\n      setVisibleCategories(newVisibleCategories);\n    }\n  }, [productData, loadingProducts, categoryData, dispatch]);\n\n  function renderProductsByCategory(categoryId) {\n    if (!visibleCategories[categoryId]) {\n      return null;\n    }\n\n    return state.products\n      .filter((product) => product.category._id === categoryId)\n      .map((product) => (\n        <ProductItem\n          key={product._id}\n          _id={product._id}\n          image={product.image}\n          name={product.name}\n          price={product.price}\n          quantity={product.quantity}\n        />\n      ));\n  }\n\n  function toggleCategoryVisibility(categoryId) {\n    setVisibleCategories((prevVisibleCategories) => ({\n      ...prevVisibleCategories,\n      [categoryId]: !prevVisibleCategories[categoryId],\n    }));\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.categories.map((category) => (\n        <div key={category._id}>\n          <h2 className=\"category-menu\" onClick={() => toggleCategoryVisibility(category._id)}>{category.name}</h2>\n          <div className=\"flex-row\">{renderProductsByCategory(category._id)}</div>\n        </div>\n      ))}\n      {(loadingProducts || loadingCategories) ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport Auth from \"../utils/auth\";\n\nconst Tables = () => {\n    const tableId = localStorage.getItem('tableId');\n    if ((tableId === undefined || tableId === null || tableId === \"\")) {\n      \n        window.location.assign('/');\n      \n    }\n\n    if (!Auth.loggedIn()) {\n        window.location.assign('/');\n    }\n    \n  return (\n    <div className=\"container\">\n      {/* <CategoryMenu /> */}\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Tables;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport './Detail.css';\n\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\" className=\"links-to-go\">← Back to Products </Link>\n          <div className=\"detail-container\">\n            <div className=\"image-container\">\n              <img\n                className=\"product-image\"\n                src={`/images/${currentProduct.image}`}\n                alt={currentProduct.name}\n              />\n            </div>\n\n            <div className=\"actions\">\n              <h2 className=\"product-name\">{currentProduct.name}</h2>\n              <p className=\"product-price\">\n                <strong>Price:</strong>${currentProduct.price}\n              </p>\n              <p className=\"product-description\">{currentProduct.description}</p>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n\n    </>\n  );\n\n}\n\nexport default Detail;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ALL_USERS, QUERY_CATEGORIES, QUERY_ALL_PRODUCTS, QUERY_USER, QUERY_CHECKOUT } from '../utils/queries';\n\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Admin(props) {\n  //const firstName = 'pamela';\n\n  const { employees } = useQuery(QUERY_USER);\n\n  const worker = employees?.employee;\n  console.log(worker);\n\n  const { loading, data } = useQuery(QUERY_ALL_USERS);\n\n  const profiles = data?.users || [];\n\n  //console.log(data);\n  console.log(profiles);\n\n  /*\n  \n    let user;\n  console.log(JSON.stringify(data));\n\n  if (data) {\n    user = data.user;\n  }\n  console.log(user);\n*/\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n  /*\n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      const mutationResponse = await updateUser({\n        variables: {\n          firstName: formState.firstName,\n          lastName: formState.lastName,\n          employee: formState.employee,\n        },\n      });\n      const token = mutationResponse.data.addUser.token;\n      Auth.login(token);\n    };\n  */\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await addUser({\n        variables: { firstName: formState.firstName, lastName: formState.lastName, employee: formState.employee },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/\">← Go Home</Link>\n\n      <h2>Admin</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        \n        <div className=\"\">\n\n          <div className=\"\">\n            {profiles.map((profile) =>\n              <div key={profile.lastName} className=\"\">\n                <div className=\"\">\n                  <h4 className=\"\">{profile.firstName} {profile.lastName} {profile.employee}</h4>\n\n                </div>\n\n              </div>\n            )}\n            </div>\n        </div>\n\n\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Employee</label>\n          <input\n            placeholder=\"employee?\"\n            name=\"employee\"\n            type=\"employee\"\n            id=\"employee\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Admin;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './OrderHistory.css';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction PendingOrders() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\" className=\"links-to-go\">← Back to Products</Link>\n\n        {user ? (\n          <div className=\"space-between my-2 order-history\">\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h5>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h5>\n                <div className=\"history\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default PendingOrders;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Contact from './pages/Contact';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Tables from './pages/Tables';\nimport MenuDetail from './pages/MenuDetail';\nimport Admin from './pages/Admin';\nimport PendingOrders from './pages/PendingOrders';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/admin\" \n                element={<Admin />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"/menuDetail/:id\" \n                element={<MenuDetail />} \n              />\n              <Route\n                path=\"/contact\"\n                element={<Contact />}\n              />\n              <Route\n                path=\"/tables/:tablesId\"\n                element={<Login />}\n              />\n              <Route\n                path=\"/tableOrder\"\n                element={<Tables />}\n              />\n              <Route\n                path=\"/pendingOrders\"\n                element={<PendingOrders />}\n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}./serviceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'ServiceWorker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}