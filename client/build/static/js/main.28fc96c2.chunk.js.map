{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/MenuItems/index.js","utils/queries.js","assets/spinner.gif","components/Menu/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","components/Footer/index.js","pages/Contact.js","pages/Success.js","pages/OrderHistory.js","components/ProductItem/index.js","components/ProductList/index.js","pages/Tables.js","pages/MenuDetail.js","pages/Admin.js","pages/PendingOrders.js","pages/Receipt.js","pages/Closing.js","App.js","serviceWorker.js","index.js"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","MenuItems","item","_useStoreContext","_useStoreContext2","image","name","price","quantity","className","children","_jsxs","Link","to","alt","src","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_ALL_KITCHEN_ORDERS","_templateObject3","_templateObject4","QUERY_CATEGORIES","_templateObject5","QUERY_USER","_templateObject6","QUERY_ALL_USERS","_templateObject7","ProductList","_useState","useState","_useState2","visibleCategories","setVisibleCategories","_useQuery","useQuery","loadingProducts","loading","productData","data","_useQuery2","loadingCategories","categoryData","useEffect","forEach","then","newVisibleCategories","category","onClick","categoryId","prevVisibleCategories","_defineProperty","spinner","CategoryMenu","CartItem","onChange","target","parseInt","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","tableId","employee","location","assign","undefined","removeItem","require","config","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","role","Home","Menu","Detail","id","useParams","currentProduct","setCurrentProduct","find","indexedProducts","_Fragment","description","itemInCart","cartItem","disabled","p","Jumbotron","style","height","clear","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_KITCHEN_ORDER","UPDATE_KITCHEN_ORDER","UPDATE_EMPLOYEE","ADD_USER","Login","tempTableId","tablesId","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","user","t0","_x","handleChange","_event$target","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Footer","tableNumber","Contact","newName","newEmail","newMessage","delay","ms","setTimeout","errorMessage","setErrorMessage","form","useRef","handleFocus","handleBlur","input","current","clearForm","reset","ref","test","String","toLowerCase","emailjs","sendForm","text","abrupt","onFocus","onBlur","placeholder","Success","addOrder","_useMutation3","addKitchenOrder","JSON","stringify","_saveOrder","productsList","kitchenOrder","userName","userCurrent","nombre","kitorder","_yield$addOrder","_data","parse","saveOrder","OrderHistory","orders","order","purchaseDate","toLocaleDateString","index","ProductItem","Tables","Admin","stopFunction","clearTimeout","employees","worker","profiles","users","updateEmployee","handleUpdateEmployee","return","reload","profile","PendingOrders","kitOrder","updateKitchenOrder","handleUpdateOrder","status","clssName","toLocaleString","_ref2","Receipt","defaultValue","Closing","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","MenuDetail","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28fc96c2.chunk.js","sourcesContent":["\n\nexport function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('JACE', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n\nexport function validateInput(input) {\n    \n  const none = undefined;\n  console.log(input);\n  \n  if (input === undefined || input === null || input === none || input === \"\") {\n    return false;\n  }\n  \n  return true;\n}\n\nexport function validateEmail(email) {\n  const reply = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return reply.test(String(email).toLowerCase());\n}\n\n\n\n\n\n\n\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","// TODO: Add a comment briefly describing the functionality of `useContext`\n// Your comment here\n\nimport React, { createContext, useContext } from 'react';\n\n// TODO: Add a comment describing the React hook that `useProductReducer` makes use of\n// Your comment here\n\nimport { useProductReducer } from './reducers';\n\n// TODO: Add a comment briefly describing what `createContext` does and what it returns\n// Your comment here\n\nconst StoreContext = createContext();\n\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  // TODO: Add a comment explaining why we passed a `value` attribute to the `Provider`\n  // Your comment here\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// TODO: Add a comment describing the purpose of our custom `useStoreContext` hook\n// Your comment here\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./MenuItems.css\";\n\nfunction MenuItems(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/menuDetail/${_id}`}>\n        <div className=\"img-container\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"product-info\">\n          <p className=\"product-name\">{name}</p>\n          <p className=\"product-price\">${price}</p>\n        </div>\n      </Link>\n      \n    </div>\n  );  \n}\n\nexport default MenuItems;","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\n\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_KITCHEN_ORDERS = gql`\nquery {\n  kitchenOrder {\n    _id\n    purchaseDate\n    purchaseTime\n    tableNumber\n    status\n    userName\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n\n      \n    }\n  }\n}\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      employee\n      email\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_USERS = gql`\nquery {\n  users {\n    _id\n    email\n    firstName\n    lastName\n    employee\n  }\n}\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect, useState } from 'react';\nimport MenuItems from '../MenuItems';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS, QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const [visibleCategories, setVisibleCategories] = useState({});\n\n  const { loading: loadingProducts, data: productData } = useQuery(QUERY_PRODUCTS);\n  const { loading: loadingCategories, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (productData) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: productData.products,\n      });\n      productData.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loadingProducts) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n\n      const newVisibleCategories = {};\n      categoryData.categories.forEach((category) => {\n        newVisibleCategories[category._id] = true;\n      });\n      setVisibleCategories(newVisibleCategories);\n    }\n  }, [productData, loadingProducts, categoryData, dispatch]);\n\n  function renderProductsByCategory(categoryId) {\n    if (!visibleCategories[categoryId]) {\n      return null;\n    }\n\n    return state.products\n      .filter((product) => product.category._id === categoryId)\n      .map((product) => (\n        <MenuItems\n          key={product._id}\n          _id={product._id}\n          image={product.image}\n          name={product.name}\n          price={product.price}\n          quantity={product.quantity}\n        />\n      ));\n  }\n\n  function toggleCategoryVisibility(categoryId) {\n    setVisibleCategories((prevVisibleCategories) => ({\n      ...prevVisibleCategories,\n      [categoryId]: !prevVisibleCategories[categoryId],\n    }));\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.categories.map((category) => (\n        <div key={category._id}>\n          <h2 className=\"category-menu\" onClick={() => toggleCategoryVisibility(category._id)}>{category.name}</h2>\n          <div className=\"flex-row\">{renderProductsByCategory(category._id)}</div>\n        </div>\n      ))}\n      {(loadingProducts || loadingCategories) ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport \"./CategoryMenu.css\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2 className=\"category-menu\">Our Menu</h2>\n      <div className=\"whole-category\">\n        {categories.map((item) => (\n          <button\n            key={item._id}\n            onClick={() => {\n              handleClick(item._id);\n            }}\n            className=\"category-btn\"\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row cart-overall\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"cart-item\">\n        <div className=\"quantity-remove\">\n            <div className=\"quantity\">{item.name}</div>\n            <div className=\"remove\">{item.price}</div>\n        </div>\n        <div className=\"quantity-remove\">\n          <div className=\"quantity\">\n            <span>Qty:</span>\n            <input\n              type=\"number\"\n              value={item.purchaseQuantity}\n              onChange={onChange}\n            />\n          </div>\n          <span\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n            className=\"remove\"\n          >\n            Remove\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n\n\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    var tableId = localStorage.getItem(\"tableId\");\n    var employee = localStorage.getItem(\"employee\");\n    console.log(employee);\n    \n\n    if (employee == \"true\") {\n      console.log(\"Employee!!\");\n      window.location.assign('/admin');\n    } else if (tableId === null || tableId === undefined || tableId === \"\") {\n      console.log(\"No TABLE!!\");\n      window.location.assign('/');\n    } else {\n      window.location.assign('/tableOrder');\n    }\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('tableId');\n    localStorage.removeItem('employee');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nrequire('dotenv').config();\n\nconst stripePromise = loadStripe('pk_test_51MWsBqFedoDMRamPBsp4YRZEOTRVhMECzdszYpVVduHdCkuoBnZSyk6G7UpjWFIk0VVfIcVUwPhX2SbGhtWpQjSE00UplXsjGu');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        console.log(item.name);\n        console.log(item.purchaseQuantity);\n        productIds.push(item._id);\n        localStorage.setItem(\"productsId\", productIds);\n      }\n      console.log(\"state.cart item\");\n\n\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🍽️\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        x\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"total\">\n            <strong>Total: ${calculateTotal()}</strong>\n          </div>\n          {Auth.loggedIn() ? (\n            <button onClick={submitCheckout} className=\"checkout-btn\">Checkout</button>\n          ) : (\n            <span>(log in to check out)</span>\n          )}\n        </div>\n      ) : (\n        <h7>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your plate yet!\n        </h7>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport Menu from \"../components/Menu\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      {/*CategoryMenu */}\n      <Menu />\n      \n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport './Detail.css';\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/tableOrder\" className=\"links-to-go\">← Back to Products</Link>\n          <div className=\"detail-container\">\n            <div className=\"image-container\">\n              <img\n                className=\"product-image\"\n                src={`/images/${currentProduct.image}`}\n                alt={currentProduct.name}\n              />\n            </div>\n\n            <div className=\"actions\">\n            <h2 className=\"product-name\">{currentProduct.name}</h2>\n              <p className=\"product-price\">\n                <strong>Price:</strong>${currentProduct.price}\n              </p>\n              <p className=\"product-description\">{currentProduct.description}</p>\n              <button className=\"add-to-cart-btn\" onClick={addToCart}>\n                Add to Cart\n              </button>\n              <button\n                className=\"remove-from-cart-btn\"\n                disabled={!cart.find((p) => p._id === currentProduct._id)}\n                onClick={removeFromCart}\n              >\n                Remove from Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n\n}\n\nexport default Detail;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 260, clear: \"both\", textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        employee\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n//\n\nexport const ADD_KITCHEN_ORDER = gql`\n  mutation addKitchenOrder(\n    $products: [ID]!\n    $tableNumber: String!\n    $userName: String!\n  ) {\n    addKitchenOrder(\n      products: $products\n      tableNumber: $tableNumber\n      userName: $userName\n    ) {\n      products {\n        _id\n        name\n\n      }\n      purchaseDate\n    }\n  }\n`;\n\n\nexport const UPDATE_KITCHEN_ORDER = gql`\n  mutation updateKitchenOrder($id: ID!) {\n    updateKitchenOrder (\n      _id: $id\n      ) {\n        tableNumber\n    }\n  }\n  `;\n\n//\nexport const UPDATE_EMPLOYEE = gql`\n  mutation updateEmployee($id: ID!) {\n    updateEmployee (\n      _id: $id\n      ) {\n        employee\n    }\n  }\n  `;\n\n\n\n\nexport const ADD_USER = gql`\n  mutation addUser(\n  $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n) {\n  addUser(\n    firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n  ) {\n    token\n      user {\n      _id\n      email\n    }\n  }\n}\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link, useParams } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport './Signup.css';\nvar tableId = localStorage.getItem(\"tableId\");\n\nfunction Login(props) {\nconsole.log(\"tableId is already set = \" + tableId);\n\n  var tempTableId = useParams().tablesId;\n  if (tempTableId > 0) {\n    tableId = tempTableId;\n    localStorage.setItem(\"tableId\", tableId);\n  }\n\n  if (tableId === null || tableId === undefined || tableId === \"\") {\n    tableId = \"\";\n  }\n  \n  console.log(\"tempTableId=\" + tempTableId);\n  console.log(tableId);\n\n\n\n\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n  \n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      \n      const token = mutationResponse.data.login.token;\n      console.log(mutationResponse.data.login.user.employee);\n      localStorage.setItem(\"employee\", mutationResponse.data.login.user.employee);\n\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\" className=\"links-to-go\">← Go to Signup</Link>\n      <div>\n        <h2 className=\"signup\">Welcome Back!</h2>\n\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n      </div>\n\n      <form onSubmit={handleFormSubmit} className=\"login-padding\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\" className=\"label\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\" className=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport './Signup.css';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\" className=\"links-to-go\">← Go to Login</Link>\n      <div>\n        <h2 className=\"signup\">Hello, Friend!</h2>\n      </div>\n\n      <form onSubmit={handleFormSubmit} className=\"signup-padding\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\" className=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\"; \nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"nav-links flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contact\">\n              Contact\n            </Link>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"nav-links flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contact\">\n              Contact\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"nav-header flex-row\">\n      <div className=\"logo-container\">\n        <div className=\"logo-circle\"></div>\n        <h1>\n          <Link to=\"/tableOrder\">\n            JACE\n          </Link>\n        </h1>\n      </div>\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\nimport './Footer.css';\n\nfunction Footer() {\n\n  var tableNumber = localStorage.getItem(\"tableId\");\n  if (tableNumber === null || tableNumber === undefined || tableNumber === \"\") {\n    tableNumber = \"\";\n  } else {\n    tableNumber = \"Table \" + tableNumber;\n  }\n\n  if (!Auth.loggedIn()) {\n    tableNumber = \"\";\n  }\n\n\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-content\">\n        <h2 className=\"table-number\">{tableNumber}</h2>\n        <p>\n          Want to learn more? <Link to=\"/contact\">Contact Us Here!</Link>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { validateEmail, validateInput } from '../utils/helpers';\nimport './Contact.css';\n\nfunction Contact() {\n  var newName = newName;\n  var newEmail = newEmail;\n  var newMessage = newMessage;\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n\n    if (!newName) {\n      setErrorMessage('Name is missing, please provide your name!');\n\n      return e.target.reset();\n\n    }\n    if (!validateEmail(newEmail)) {\n      setErrorMessage('Email is invalid');\n\n      return e.target.reset();\n\n    }\n    if (!newMessage) {\n      setErrorMessage('Message is missing, please provide a message!');\n\n      return e.target.reset();\n\n    }\n\n    emailjs.sendForm(\n      'service_93p5os3',\n      'template_x3tk4je',\n      form.current,\n      '5vCxrVoi6nK138Vam'\n    )\n      .then(async (result) => {\n        console.log(result.text);\n        console.log(form);         // <form ref={form} onSubmit={sendEmail}>\n        setErrorMessage(\"Message sent, We will get back to you shortly!\");\n        await delay(4000);\n        clearForm();\n        return setErrorMessage('');\n\n\n      }, (error) => {\n        console.log(error.text);\n      });\n  };\n\n  const handleFocus = (e) => {\n    e.preventDefault();\n    setErrorMessage('')\n    console.log(e.target.value);\n\n  };\n\n  const handleBlur = (e) => {\n    e.preventDefault();\nconsole.log(form.current);\n    console.log(newName);\n    if (!validateInput(e.target.value)) {\n      setErrorMessage('Please enter a valid input!')\n\n      return;\n    };\n\n    console.log(e.target.value);\n  };\n\n  const handleName = (e) => {\n    e.preventDefault();\n\n    return newName = e.target.value;\n\n  };\n\n  const handleEmail = (e) => {\n    e.preventDefault();\n\n    return newEmail = e.target.value;\n\n  };\n\n  const handleMessage = (e) => {\n    e.preventDefault();\n\n    return newMessage = e.target.value;\n\n  };\n\n  const clearForm = () => {\n    form.current.reset();\n  };\n\n  return (\n    <section>\n      <h2 className=\"contact-us\">Contact Us</h2>\n\n      <div className=\"contact\">\n        <div className=\"contact-left-container\">\n          <img className=\"map\" src='/images/map.png' alt=\"map\" />\n        </div>\n\n        <div className=\"contact-right-container\">\n          <h1>JACE</h1>\n          <p>Phone: 123-456-7890</p>\n          <p>Email: <a href=\"mailto:jace1971@yahoo.com\">jace1971@yahoo.com</a></p>\n          <p>Address: 130 St George St, Toronto</p>\n\n          <form className=\"contact-form\" ref={form} onSubmit={sendEmail}>\n            <label className=\"label\">Name</label>\n            <input type=\"text\" name=\"user_name\" className=\"input\" onChange={handleName} onFocus={handleFocus} onBlur={handleBlur} />\n            <label className=\"label\">Email</label>\n            <input type=\"email\" name=\"user_email\" className=\"input\" onChange={handleEmail} onFocus={handleFocus} onBlur={handleBlur} />\n            <label className=\"label\">Message</label>\n            <textarea placeholder=\"Enter message\" name=\"message\" className=\"input message-box\" onChange={handleMessage} onFocus={handleFocus} onBlur={handleBlur} />\n            <input className=\"contact-submit\" type=\"submit\" value=\"Send\"/>\n          </form>\n          {errorMessage && (\n            <div>\n              <p className=\"error-message\">{errorMessage}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n    </section>\n  );\n}\n\nexport default Contact;\n","import React, { useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { ADD_KITCHEN_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\n\n\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n  //\n  const [addKitchenOrder] = useMutation(ADD_KITCHEN_ORDER);\n  //\n\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n    localStorage.setItem('userName', JSON.stringify(user));\n  }\n\n  //\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = [];\n      const productsList = [];\n      console.log(\"cart\");\n      console.log(cart);\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n\n      const kitchenOrder = cart.map((item) => item._id);\n      console.log(\"kitchenOrder\");\n      console.log(kitchenOrder);\n      localStorage.setItem(\"kitchenOrder\", JSON.stringify(kitchenOrder));\n      ///\n\n      cart.forEach((item) => {\n\n        for (let i = 0; i < item.purchaseQuantity; i++) {\n          console.log(item.name);\n          console.log(item.purchaseQuantity);\n          products.push(item._id);\n          productsList.push(item._id, item.name);\n\n          localStorage.setItem(\"productsProper\", products);\n        }\n        console.log(\"state.cart item\");\n        localStorage.setItem(\"products\", JSON.stringify(products));\n        localStorage.setItem(\"productsList\", JSON.stringify(productsList));\n        console.log(\"products\");\n        console.log(products);\n      });\n\n      //test code below addKitchenOrder\n\n      console.log(\"products\");\n      console.log(products);\n      console.log(\"tableNumber\");\n      console.log(localStorage.getItem(\"tableId\"));\n\n      const userName = (localStorage.getItem(\"userName\"));\n      console.log(\"userName\");\n      const userCurrent = JSON.parse(userName);\n      console.log(userCurrent.firstName);\n      console.log(userCurrent.lastName);\n      const nombre = (userCurrent.firstName);\n      console.log(\"nombre\");\n      console.log(nombre);\n      console.log(productsList);\n      const tableNumber = localStorage.getItem(\"tableId\");\n\n      //\n      const mutationResponse = await addKitchenOrder({\n        variables: {\n          products: products,\n          tableNumber: tableNumber,\n          userName: nombre,\n        },\n\n      });\n      const kitorder = mutationResponse.data.addKitchenOrder;\n      //console.log(\"data\");\n      //onsole.log(mutationResponse.data);\n      console.log(\"kitorder\");\n      console.log(kitorder);\n      localStorage.setItem(\"addKitchecnMutationResponse\", JSON.stringify(mutationResponse.data));\n\n\n      //\n      /*\n            if (products.length) {\n              localStorage.getItem(\"productsProper\", products);\n              const { data } = await addKitchenOrder({\n                variables: {\n                  products: products,\n                  tableNumber: localStorage.getItem(\"tableId\"),\n                  userName: user,\n      \n                }\n              });\n              console.log(\"Kitchendata\");\n              const productData = data.addKitchenOrder;\n              localStorage.setItem('kitchenOrder', JSON.stringify(productData));\n      \n            }\n      */\n      //up here\n      ///\n\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        console.log(\"data\");\n        const productData = data.addOrder.products;\n        localStorage.setItem('order', JSON.stringify(productData));\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n\n      setTimeout(() => {\n        console.log('Order placed! You will now be redirected to the home page.');\n        localStorage.setItem(\"tableId\", \"\");\n        console.log(localStorage.getItem(\"tableId\"));\n        window.location.assign('/receipt');\n      }, 30);\n    }\n\n    saveOrder();\n\n  }, [addOrder, addKitchenOrder]);\n\n  return (\n    <div className=\"success-children\">\n      <Jumbotron>\n        <h1>💸👍</h1>\n        <h4>You will now be redirected to your receipt</h4>\n      </Jumbotron>\n    </div>\n\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './OrderHistory.css';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n    console.log(user);\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\" className=\"links-to-go\">← Back to Products</Link>\n\n        {user ? (\n          <div className=\"space-between my-2 order-history\">\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h5>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h5>\n                <div className=\"history\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <div className='img-container'>\n                          <img alt={name} src={`/images/${image}`} />\n                        </div>\n                        <div className=\"product-info\">\n                        <p className='product-name'>{name}</p>\n                        <p className='product-price'>${price}</p>\n                        </div>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { \n  ADD_TO_CART, \n  UPDATE_CART_QUANTITY \n} from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./ProductItem.css\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/products/${_id}`}>\n        <div className=\"img-container\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"product-info\">\n          <p className=\"product-name\">{name}</p>\n          <p className=\"product-price\">${price}</p>\n        </div>\n      </Link>\n      <button onClick={addToCart} className=\"add-to-cart-btn\">\n        Add to cart\n      </button>\n    </div>\n  );  \n}\n\nexport default ProductItem;","import React, { useEffect, useState } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS, QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const [visibleCategories, setVisibleCategories] = useState({});\n\n  const { loading: loadingProducts, data: productData } = useQuery(QUERY_PRODUCTS);\n  const { loading: loadingCategories, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (productData) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: productData.products,\n      });\n      productData.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loadingProducts) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n\n      const newVisibleCategories = {};\n      categoryData.categories.forEach((category) => {\n        newVisibleCategories[category._id] = true;\n      });\n      setVisibleCategories(newVisibleCategories);\n    }\n  }, [productData, loadingProducts, categoryData, dispatch]);\n\n  function renderProductsByCategory(categoryId) {\n    if (!visibleCategories[categoryId]) {\n      return null;\n    }\n\n    return state.products\n      .filter((product) => product.category._id === categoryId)\n      .map((product) => (\n        <ProductItem\n          key={product._id}\n          _id={product._id}\n          image={product.image}\n          name={product.name}\n          price={product.price}\n          quantity={product.quantity}\n        />\n      ));\n  }\n\n  function toggleCategoryVisibility(categoryId) {\n    setVisibleCategories((prevVisibleCategories) => ({\n      ...prevVisibleCategories,\n      [categoryId]: !prevVisibleCategories[categoryId],\n    }));\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.categories.map((category) => (\n        <div key={category._id}>\n          <h2 className=\"category-menu\" onClick={() => toggleCategoryVisibility(category._id)}>{category.name}</h2>\n          <div className=\"flex-row\">{renderProductsByCategory(category._id)}</div>\n        </div>\n      ))}\n      {(loadingProducts || loadingCategories) ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport Auth from \"../utils/auth\";\n\nconst Tables = () => {\n    const tableId = localStorage.getItem('tableId');\n    if ((tableId === undefined || tableId === null || tableId === \"\")) {\n      \n        window.location.assign('/');\n      \n    }\n\n    if (!Auth.loggedIn()) {\n        window.location.assign('/');\n    }\n    \n  return (\n    <div className=\"container\">\n      {/*<CategoryMenu />*/}\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Tables;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport './Detail.css';\n\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\" className=\"links-to-go\">← Back to Products </Link>\n          <div className=\"detail-container\">\n            <div className=\"image-container\">\n              <img\n                className=\"product-image\"\n                src={`/images/${currentProduct.image}`}\n                alt={currentProduct.name}\n              />\n            </div>\n\n            <div className=\"actions\">\n              <h2 className=\"product-name\">{currentProduct.name}</h2>\n              <p className=\"product-price\">\n                <strong>Price:</strong>${currentProduct.price}\n              </p>\n              <p className=\"product-description\">{currentProduct.description}</p>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n\n    </>\n  );\n\n}\n\nexport default Detail;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ALL_USERS, QUERY_CATEGORIES, QUERY_ALL_PRODUCTS, QUERY_USER, QUERY_CHECKOUT } from '../utils/queries';\nimport \"./Admin.css\";\nimport { ADD_USER, UPDATE_EMPLOYEE } from '../utils/mutations';\n\nfunction Admin(props) {\n  \n  const valid = localStorage.getItem('employee');\n  if (valid !== 'true') {\n    window.location.assign('/login');\n  }\n  function stopFunction() {\n    clearTimeout(setTimeout);\n    \n\n  };\n  stopFunction = setTimeout(stopFunction, 0);\n  const { employees } = useQuery(QUERY_USER);\n\n  const worker = employees?.employee;\n  console.log(worker);\n\n  const { loading, data } = useQuery(QUERY_ALL_USERS);\n\n  const profiles = data?.users || [];\n  \n  console.log(profiles);\n   \n\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [updateEmployee] = useMutation(UPDATE_EMPLOYEE);\n\n  const handleUpdateEmployee = async (event) => {\n    event.preventDefault();\n   \n    let id = event.target.name;\n    console.log(id);\n    const mutationResponse = await updateEmployee({\n      variables: {\n        id: id,\n      },\n      return: window.location.reload(),\n    });\n    console.log(\"UPDATED EMPLOYEE*******\");\n\n  };\n\n  \n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/\" className=\"links-to-go\">← Go Home</Link>\n      <Link to=\"/pendingorders\" className=\"links-to-go\">← Pending Orders</Link>\n      <Link to=\"/closing\" className=\"links-to-go\">← Closing</Link>\n\n      <h2>Admin</h2>\n     \n      <div className=\"\">\n        {profiles.map((profile) =>\n          <div key={profile.lastName} className=\"\">\n            <div className=\"\">\n              <h4 className=\"\">{profile._id} {profile.firstName} {profile.lastName} {profile.employee}</h4>\n              <a name={profile._id} id={profile._id} className=\"update\" onClick={handleUpdateEmployee}>{profile.employee}</a>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './PendingOrders.css';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ALL_KITCHEN_ORDERS } from '../utils/queries';\nimport { UPDATE_KITCHEN_ORDER } from '../utils/mutations';\n\nfunction PendingOrders() {\n  \n  const valid = localStorage.getItem('employee');\n  if (valid !== 'true') {\n    window.location.assign('/login');\n  }\n  const { data } = useQuery(QUERY_ALL_KITCHEN_ORDERS);\n  let kitOrder;\n\n  if (data) {\n    kitOrder = data;\n    console.log(kitOrder);\n  }\n\n  const [updateKitchenOrder] = useMutation(UPDATE_KITCHEN_ORDER);\n\n  const handleUpdateOrder = async (event) => {\n    event.preventDefault();\n    console.log(event.target);\n    let id = event.target.name;\n\n    console.log(id);\n    const mutationResponse = await updateKitchenOrder({\n      variables: {\n        id: id,\n\n      },\n      return: window.location.reload(),\n    });\n    console.log(\"mutationResponse data\");\n    const status = mutationResponse.data.updateKitchenOrder.tableNumber;\n    console.log(status);\n    \n  };\n  \n  setTimeout(() => {\n    console.log('Order placed! You will now be redirected to the home page.');\n    \n    window.location.reload();\n  }, 5000);\n  function stopFunction() {\n    clearTimeout(setTimeout);\n    window.location.assign(\"/admin\");\n\n  };\n  \n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/admin\" clssName=\"links-to-go\">← Admin</Link>\n        <Link to=\"/closing\" className=\"links-to-go\">← Closing</Link>\n        <h1 className=\"\">Pending Orders</h1>\n\n        {kitOrder ? (\n          \n          <div className=\"container-orders\">\n            \n            {kitOrder.kitchenOrder.map((order) => (\n              <div key={order._id} className=\"order\">\n                \n                <h5>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleString()}\n                </h5>\n                <h5>\n                  Customer: {order.userName} Table: {order.tableNumber} \n                </h5>\n\n                {order.products.map(({ _id, name }, index) => (\n                  <div key={index} className=\"products\">\n                    <p className=\"hidden\">{_id}</p>\n                    <p>{name}</p>\n\n                  </div>\n                ))}\n              <a name={order._id} id={order.status} className=\"update-order order-status \" onClick={handleUpdateOrder}>{order.status}</a>\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default PendingOrders;\n","import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { validateEmail, validateInput } from '../utils/helpers';\nimport './Contact.css';\nimport { Link } from \"react-router-dom\";\nimport \"./Receipt.css\"\n\nfunction Receipt() {\n    var newName = newName;\n    var newEmail = newEmail;\n    var newMessage = newMessage;\n    const cart = JSON.parse(localStorage.getItem(\"cart\"));\n    console.log(\"cart\");\n    console.log(cart);\n\n    const tableNumber = localStorage.getItem(\"tableId\");\n    console.log(\"tableNumber\");\n    console.log(tableNumber);\n\n    console.log(\"userName\");\n    const userName = (localStorage.getItem(\"userName\"));\n    const userCurrent = JSON.parse(userName);\n    console.log(userCurrent.firstName);\n    console.log(userCurrent.lastName);\n    console.log(userCurrent.email);\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useRef();\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n\n        emailjs.sendForm(\n            'service_93p5os3',\n            'template_3mqjcha',\n            form.current,\n            '5vCxrVoi6nK138Vam'\n        )\n            .then(async (result) => {\n                console.log(result.text);\n                console.log(form);         // <form ref={form} onSubmit={sendEmail}>\n                setErrorMessage(\"Message sent, We will get back to you shortly!\");\n                await delay(2000);\n                clearForm();\n                setErrorMessage(\"\");\n                return window.location.assign('/tableOrder');;\n\n\n            }, (error) => {\n                console.log(error.text);\n            });\n    };\n\n    const handleFocus = (e) => {\n        e.preventDefault();\n        setErrorMessage('')\n        console.log(e.target.value);\n\n    };\n\n    const handleBlur = (e) => {\n        e.preventDefault();\n        console.log(form.current);\n        console.log(newName);\n\n\n        console.log(e.target.value);\n    };\n\n    const handleName = (e) => {\n        e.preventDefault();\n\n\n        return newName = e.target.value;\n\n    };\n\n    const handleEmail = (e) => {\n        e.preventDefault();\n\n        return newEmail = e.target.value;\n\n    };\n\n    const handleMessage = (e) => {\n        e.preventDefault();\n\n        return newMessage = e.target.value;\n\n    };\n\n    const clearForm = () => {\n        form.current.reset();\n    };\n\n    \n    return (\n\n        <section>\n            <div className=\"receiptHeader\">\n                <h2>Thank you, {userCurrent.firstName}</h2>\n                <h2>Your server will bring your order when ready!</h2>\n                <h4>Feel free to save this receipt or get an email copy.</h4>\n            </div>\n            <div className=\"contact\">\n\n\n\n                <div className=\"receipt\">\n                    <h1>\n                        <Link to=\"/tableOrder\" className=\"links-to-go\">← Back Home</Link>\n                    </h1>\n\n                    <form className=\"contact-form\" ref={form} onSubmit={sendEmail}>\n                        <label className=\"label hidden\">Name</label>\n                        <input type=\"text\" name=\"user_name\" className=\"hidden\" defaultValue={userCurrent.firstName} onChange={handleName} />\n                        <label className=\"label hidden\">Email</label>\n                        <input type=\"email\" name=\"user_email\" className=\"hidden\" defaultValue=\"jace1971@yahoo.com\" onChange={handleEmail} onFocus={handleFocus} onBlur={handleBlur} />\n                        <label className=\"label hidden\">Message</label>\n                        <textarea name=\"message\" className=\"hidden message-box\" defaultValue={userCurrent.email} onChange={handleMessage} onFocus={handleFocus} onBlur={handleBlur} />\n                        <input className=\"submit\" type=\"submit\" value=\"Send\" />\n                    </form>\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p className=\"error-message\">{errorMessage}</p>\n                    </div>\n                )}\n\n            </div>\n\n        </section>\n    );\n}\n\nexport default Receipt;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Closing.css';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ALL_KITCHEN_ORDERS } from '../utils/queries';\nimport { UPDATE_KITCHEN_ORDER } from '../utils/mutations';\n\nfunction Closing() {\n    \n  const valid = localStorage.getItem('employee');\n  if (valid !== 'true') {\n    window.location.assign('/login');\n  }\n\n  const { data } = useQuery(QUERY_ALL_KITCHEN_ORDERS);\n  let kitOrder;\n\n  if (data) {\n    kitOrder = data;\n    console.log(kitOrder);\n  }\n  \n    \n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/admin\" className=\"links-to-go\">← Admin</Link>\n        <Link to=\"/pendingorders\" className=\"links-to-go\">← Pending Orders</Link>\n        <h1 className=\"\">Closing</h1>\n\n        {kitOrder ? (\n          \n          <div className=\"container-orders\">\n            \n            {kitOrder.kitchenOrder.map((order) => (\n              <div key={order._id} className=\"order\">\n                \n                <h5>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleString()}\n                </h5>\n                <h5>\n                  Customer: {order.userName} Table: {order.tableNumber} \n                </h5>\n\n                {order.products.map(({ _id, name }, index) => (\n                  <div key={index} className=\"products\">\n                    <p className=\"hidden\">{_id}</p>\n                    <p>{name}</p>\n\n                  </div>\n                ))}\n              <a name={order._id} id={order.status} className=\"update-order order-status \" >{order.status}</a>\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default Closing;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Contact from './pages/Contact';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Tables from './pages/Tables';\nimport MenuDetail from './pages/MenuDetail';\nimport Admin from './pages/Admin';\nimport PendingOrders from './pages/PendingOrders';\nimport Receipt from './pages/Receipt';\nimport Closing from './pages/Closing';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/admin\" \n                element={<Admin />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"/menuDetail/:id\" \n                element={<MenuDetail />} \n              />\n              <Route\n                path=\"/contact\"\n                element={<Contact />}\n              />\n              <Route\n                path=\"/tables/:tablesId\"\n                element={<Login />}\n              />\n              <Route\n                path=\"/tableOrder\"\n                element={<Tables />}\n              />\n              <Route\n                path=\"/pendingorders\"\n                element={<PendingOrders />}\n              />\n              <Route\n                path=\"/receipt\"\n                element={<Receipt />}\n              />\n              <Route\n                path=\"/closing\"\n                element={<Closing />}\n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      console.log(process.env.PUBLIC_URL);\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}