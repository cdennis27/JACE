{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/MenuItems/index.js","utils/queries.js","assets/spinner.gif","components/Menu/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","components/Footer/index.js","pages/Contact.js","pages/Success.js","pages/OrderHistory.js","components/ProductItem/index.js","components/ProductList/index.js","pages/Tables.js","pages/MenuDetail.js","App.js","serviceWorker.js","index.js"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","MenuItems","item","_useStoreContext","_useStoreContext2","image","name","price","quantity","className","children","_jsxs","Link","to","alt","src","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","onClick","id","CartItem","placeholder","onChange","target","parseInt","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","tableId","undefined","location","assign","removeItem","require","config","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Menu","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","find","indexedProducts","_Fragment","description","itemInCart","cartItem","disabled","p","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","tempTableId","tablesId","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Footer","Contact","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","ProductItem","Tables","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","MenuDetail","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a12469e3.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","// TODO: Add a comment briefly describing the functionality of `useContext`\n// Your comment here\n\nimport React, { createContext, useContext } from 'react';\n\n// TODO: Add a comment describing the React hook that `useProductReducer` makes use of\n// Your comment here\n\nimport { useProductReducer } from './reducers';\n\n// TODO: Add a comment briefly describing what `createContext` does and what it returns\n// Your comment here\n\nconst StoreContext = createContext();\n\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  // TODO: Add a comment explaining why we passed a `value` attribute to the `Provider`\n  // Your comment here\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// TODO: Add a comment describing the purpose of our custom `useStoreContext` hook\n// Your comment here\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./MenuItems.css\";\n\nfunction MenuItems(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/menuDetail/${_id}`}>\n        <div className=\"img-container\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"product-info\">\n          <p className=\"product-name\">{name}</p>\n          <p className=\"product-price\">${price}</p>\n        </div>\n      </Link>\n      \n    </div>\n  );  \n}\n\nexport default MenuItems;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport MenuItems from '../MenuItems';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <MenuItems\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport \"./CategoryMenu.css\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2 className=\"category-menu\">Our Menu</h2>\n      <div className=\"whole-category\">\n        {categories.map((item) => (\n          \n          <button\n            key={item._id}\n            onClick={() => {\n              handleClick(item._id);\n            }}\n            className=\"category-btn\"\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default CategoryMenu;","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    var tableId = localStorage.getItem(\"tableId\");\n    \n    if (tableId === null || tableId === undefined || tableId === \"\") {\n      console.log(\"No TABLE!!!!!!!!\");\n      window.location.assign('/');\n    } else {\n      window.location.assign('/tableOrder');\n    }\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('tableId');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nrequire('dotenv').config();\n\n// TODO: Add a comment describing the functionality of loadStripe\n// Your comment here\n\nconst stripePromise = loadStripe('pk_test_51MWsBqFedoDMRamPBsp4YRZEOTRVhMECzdszYpVVduHdCkuoBnZSyk6G7UpjWFIk0VVfIcVUwPhX2SbGhtWpQjSE00UplXsjGu');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // TODO: Add a comment describing the functionality of the useEffect hook in this instance\n  // Your comment here\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // TODO: Add a comment describing what data we are watching and what work should be preformed if that data changes\n  // Your comment here\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // TODO: Add a comment describing the functionality of our submitCheckout function.\n  // Your comment here\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between total\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h7>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n           You haven't added anything to your plate yet!\n        </h7>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport Menu from \"../components/Menu\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <Menu />\n      \n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport './Detail.css';\n\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"detail-container\">\n          <Link to=\"/tableOrder\">\n            <button className=\"back-to-products-btn\">← Back to Products</button>\n          </Link>\n  \n          <h2 className=\"product-name\">{currentProduct.name}</h2>\n  \n          <p className=\"product-description\">{currentProduct.description}</p>\n  \n          <div className=\"image-container\">\n            <img\n              className=\"product-image\"\n              src={`/images/${currentProduct.image}`}\n              alt={currentProduct.name}\n            />\n          </div>\n  \n          <div className=\"actions\">\n            <p className=\"product-price\">\n              <strong>Price:</strong>${currentProduct.price}\n            </p>\n            <button className=\"add-to-cart-btn\" onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button\n              className=\"remove-from-cart-btn\"\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n  \n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link, useParams } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport './Signup.css';\nvar tableId = localStorage.getItem(\"tableId\");\n\nfunction Login(props) {\nconsole.log(\"tableId is already set = \" + tableId);\n\n  var tempTableId = useParams().tablesId;\n  if (tempTableId > 0) {\n    tableId = tempTableId;\n    localStorage.setItem(\"tableId\", tableId);\n  }\n\n  if (tableId === null || tableId === undefined || tableId === \"\") {\n    tableId = \"\";\n  }\n  \n  console.log(\"tempTableId=\" + tempTableId);\n  console.log(tableId);\n\n\n\n\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\" className=\"links-to-go\">← Go to Signup</Link>\n      <h2 className=\"signup\">Welcome Back!</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <h3>{tableId}</h3>\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\" className=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport './Signup.css';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\" className=\"links-to-go\">← Go to Login</Link>\n        <h2 className=\"signup\">Hello, Friend!</h2>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"firstName\">First Name:</label>\n            <input\n              name=\"firstName\"\n              type=\"firstName\"\n              id=\"firstName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"lastName\">Last Name:</label>\n            <input\n              name=\"lastName\"\n              type=\"lastName\"\n              id=\"lastName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row flex-end\">\n            <button type=\"submit\" className=\"submit\">Submit</button>\n          </div>\n        </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\"; \nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"nav-links flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"nav-links flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"nav-header flex-row\">\n      <div className=\"logo-container\">\n        <div className=\"logo-circle\"></div>\n        <h1>\n          <Link to=\"/tableOrder\">\n            JACE\n          </Link>\n        </h1>\n      </div>\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-content\">\n        <p>\n          Want to learn more?  <Link to=\"/contact\"> Contact Us Here!</Link>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Contact.css';\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      {/* Contact page content goes here */}\n      <h1>Test</h1>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        console.log('Order placed! You will now be redirected to the home page.');\n        localStorage.setItem(\"tableId\", \"\");\n        console.log(localStorage.getItem(\"tableId\"));\n        window.location.assign('/');\n      }, 7000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./ProductItem.css\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/products/${_id}`}>\n        <div className=\"img-container\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"product-info\">\n          <p className=\"product-name\">{name}</p>\n          <p className=\"product-price\">${price}</p>\n        </div>\n      </Link>\n      <button onClick={addToCart} className=\"add-to-cart-btn\">\n        Add to cart\n      </button>\n    </div>\n  );  \n}\n\nexport default ProductItem;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport Auth from \"../utils/auth\";\n\nconst Tables = () => {\n    const tableId = localStorage.getItem('tableId');\n    if ((tableId === undefined || tableId === null || tableId === \"\")) {\n      \n        window.location.assign('/');\n      \n    }\n\n    if (!Auth.loggedIn()) {\n        window.location.assign('/');\n    }\n    \n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Tables;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport './Detail.css';\n\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"detail-container\">\n          <Link to=\"/\">\n            <button className=\"back-to-products-btn\">← Back to Products</button>\n          </Link>\n  \n          <h2 className=\"product-name\">{currentProduct.name}</h2>\n  \n          <p className=\"product-description\">{currentProduct.description}</p>\n  \n          <div className=\"image-container\">\n            <img\n              className=\"product-image\"\n              src={`/images/${currentProduct.image}`}\n              alt={currentProduct.name}\n            />\n          </div>\n  \n          <div className=\"actions\">\n            <p className=\"product-price\">\n              <strong>Price:</strong>${currentProduct.price}\n            </p>\n                        \n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      \n    </>\n  );\n  \n}\n\nexport default Detail;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Contact from './pages/Contact';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Tables from './pages/Tables';\nimport MenuDetail from './pages/MenuDetail';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"/menuDetail/:id\" \n                element={<MenuDetail />} \n              />\n              <Route\n                path=\"/contact\"\n                element={<Contact />}\n              />\n              <Route\n                path=\"/tables/:tablesId\"\n                element={<Login />}\n              />\n              <Route\n                path=\"/tableOrder\"\n                element={<Tables />}\n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}